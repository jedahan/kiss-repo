From 2792dd6ab932816d3ffaf3ac62665ec5fe7f165f Mon Sep 17 00:00:00 2001
From: Daniel Campello <campello@chromium.org>
Date: Thu, 13 Aug 2020 12:45:47 -0600
Subject: [PATCH] WIP: fwupd: Strip polkit out

Experimenting with stripping out polkit dependency in order to get the
full daemon on Chrome OS.

BUG=none
TEST=emerge-sarien fwupd; /usr/libexec/fwupd/fwupd -v

Change-Id: I7f869a121cd327907d056927eac91758fd071c5c
---

diff --git a/meson.build b/meson.build
index ceed706..67dad05 100644
--- a/meson.build
+++ b/meson.build
@@ -206,11 +206,6 @@
 valgrind = dependency('valgrind', required: false)
 soup = dependency('libsoup-2.4', version : '>= 2.51.92')
 if build_daemon
-  polkit = dependency('polkit-gobject-1', version : '>= 0.103')
-  if polkit.version().version_compare('>= 0.114')
-    conf.set('HAVE_POLKIT_0_114', '1')
-  endif
-  conf.set_quoted ('POLKIT_ACTIONDIR', polkit.get_pkgconfig_variable('actiondir'))
   udevdir = get_option('udevdir')
   if udevdir == ''
     udev = dependency('udev')
@@ -428,9 +423,6 @@
   subdir('docs')
 endif
 subdir('libfwupd')
-if build_daemon
-  subdir('policy')
-endif
 if build_standalone
   subdir('data')
   subdir('po')
diff --git a/src/fu-main.c b/src/fu-main.c
index 679bb09..db8157c 100644
--- a/src/fu-main.c
+++ b/src/fu-main.c
@@ -14,7 +14,6 @@
 #include <glib/gi18n.h>
 #include <glib-unix.h>
 #include <locale.h>
-#include <polkit/polkit.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <jcat.h>
@@ -30,14 +29,6 @@
 #include "fu-engine.h"
 #include "fu-install-task.h"
 
-#ifndef HAVE_POLKIT_0_114
-#pragma clang diagnostic push
-#pragma clang diagnostic ignored "-Wunused-function"
-G_DEFINE_AUTOPTR_CLEANUP_FUNC(PolkitAuthorizationResult, g_object_unref)
-G_DEFINE_AUTOPTR_CLEANUP_FUNC(PolkitSubject, g_object_unref)
-#pragma clang diagnostic pop
-#endif
-
 typedef struct {
 	GDBusConnection		*connection;
 	GDBusNodeInfo		*introspection_daemon;
@@ -48,7 +39,6 @@
 #if GLIB_CHECK_VERSION(2,63,3)
 	GMemoryMonitor		*memory_monitor;
 #endif
-	PolkitAuthority		*authority;
 	guint			 owner_id;
 	FuEngine		*engine;
 	gboolean		 update_in_progress;
@@ -305,7 +295,6 @@
 typedef struct {
 	GDBusMethodInvocation	*invocation;
 	FuEngineRequest		*request;
-	PolkitSubject		*subject;
 	GPtrArray		*install_tasks;
 	GPtrArray		*action_ids;
 	GPtrArray		*checksums;
@@ -324,8 +313,6 @@
 {
 	if (helper->blob_cab != NULL)
 		g_bytes_unref (helper->blob_cab);
-	if (helper->subject != NULL)
-		g_object_unref (helper->subject);
 	if (helper->silo != NULL)
 		g_object_unref (helper->silo);
 	if (helper->request != NULL)
@@ -349,50 +336,13 @@
 G_DEFINE_AUTOPTR_CLEANUP_FUNC(FuMainAuthHelper, fu_main_auth_helper_free)
 #pragma clang diagnostic pop
 
-/* error may or may not already have been set */
-static gboolean
-fu_main_authorization_is_valid (PolkitAuthorizationResult *auth, GError **error)
-{
-	/* failed */
-	if (auth == NULL) {
-		g_autofree gchar *message = g_strdup ((*error)->message);
-		g_clear_error (error);
-		g_set_error (error,
-			     FWUPD_ERROR,
-			     FWUPD_ERROR_AUTH_FAILED,
-			     "Could not check for auth: %s", message);
-		return FALSE;
-	}
-
-	/* did not auth */
-	if (!polkit_authorization_result_get_is_authorized (auth)) {
-		g_set_error_literal (error,
-				     FWUPD_ERROR,
-				     FWUPD_ERROR_AUTH_FAILED,
-				     "Failed to obtain auth");
-		return FALSE;
-	}
-
-	/* success */
-	return TRUE;
-}
-
 static void
-fu_main_authorize_unlock_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_unlock_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* authenticated */
 	if (!fu_engine_unlock (helper->priv->engine, helper->device_id, &error)) {
@@ -405,20 +355,12 @@
 }
 
 static void
-fu_main_authorize_set_approved_firmware_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_set_approved_firmware_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* success */
 	for (guint i = 0; i < helper->checksums->len; i++) {
@@ -429,21 +371,13 @@
 }
 
 static void
-fu_main_authorize_self_sign_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_self_sign_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autofree gchar *sig = NULL;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* authenticated */
 	sig = fu_engine_self_sign (helper->priv->engine, helper->value, helper->flags, &error);
@@ -457,19 +391,10 @@
 }
 
 static void
-fu_main_modify_config_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_modify_config_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
-
-	/* get result */
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	if (!fu_engine_modify_config (helper->priv->engine, helper->key, helper->value, &error)) {
 		g_dbus_method_invocation_return_gerror (helper->invocation, error);
@@ -481,20 +406,12 @@
 }
 
 static void
-fu_main_authorize_activate_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_activate_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* authenticated */
 	if (!fu_engine_activate (helper->priv->engine, helper->device_id, &error)) {
@@ -507,20 +424,12 @@
 }
 
 static void
-fu_main_authorize_verify_update_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_verify_update_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* authenticated */
 	if (!fu_engine_verify_update (helper->priv->engine, helper->device_id, &error)) {
@@ -533,20 +442,12 @@
 }
 
 static void
-fu_main_authorize_modify_remote_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_modify_remote_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* authenticated */
 	if (!fu_engine_modify_remote (helper->priv->engine,
@@ -565,20 +466,12 @@
 static void fu_main_authorize_install_queue (FuMainAuthHelper *helper);
 
 static void
-fu_main_authorize_install_cb (GObject *source, GAsyncResult *res, gpointer user_data)
+fu_main_authorize_install_cb (gpointer user_data)
 {
 	g_autoptr(FuMainAuthHelper) helper = (FuMainAuthHelper *) user_data;
 	g_autoptr(GError) error = NULL;
-	g_autoptr(PolkitAuthorizationResult) auth = NULL;
 
-	/* get result */
 	fu_main_set_status (helper->priv, FWUPD_STATUS_IDLE);
-	auth = polkit_authority_check_authorization_finish (POLKIT_AUTHORITY (source),
-							    res, &error);
-	if (!fu_main_authorization_is_valid (auth, &error)) {
-		g_dbus_method_invocation_return_gerror (helper->invocation, error);
-		return;
-	}
 
 	/* do the next authentication action ID */
 	fu_main_authorize_install_queue (g_steal_pointer (&helper));
@@ -594,15 +487,8 @@
 
 	/* still more things to to authenticate */
 	if (helper->action_ids->len > 0) {
-		g_autofree gchar *action_id = g_strdup (g_ptr_array_index (helper->action_ids, 0));
-		g_autoptr(PolkitSubject) subject = g_object_ref (helper->subject);
 		g_ptr_array_remove_index (helper->action_ids, 0);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      action_id, NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_install_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_install_cb(g_steal_pointer (&helper));
 		return;
 	}
 
@@ -880,7 +766,6 @@
 		g_autofree gchar *checksums_str = NULL;
 		g_auto(GStrv) checksums = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 
 		g_variant_get (parameters, "(^as)", &checksums);
 		checksums_str = g_strjoinv (",", checksums);
@@ -895,14 +780,7 @@
 		helper->checksums = g_ptr_array_new_with_free_func (g_free);
 		for (guint i = 0; checksums[i] != NULL; i++)
 			g_ptr_array_add (helper->checksums, g_strdup (checksums[i]));
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.set-approved-firmware",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_set_approved_firmware_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_set_approved_firmware_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "SelfSign") == 0) {
@@ -910,7 +788,6 @@
 		gchar *prop_key;
 		g_autofree gchar *value = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 		g_autoptr(GVariantIter) iter = NULL;
 
 		g_variant_get (parameters, "(sa{sv})", &value, &iter);
@@ -935,14 +812,7 @@
 		helper->value = g_steal_pointer (&value);
 		helper->request = g_steal_pointer (&request);
 		helper->invocation = g_object_ref (invocation);
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.self-sign",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_self_sign_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_self_sign_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "GetDowngrades") == 0) {
@@ -1099,7 +969,6 @@
 	if (g_strcmp0 (method_name, "Unlock") == 0) {
 		const gchar *device_id = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 
 		g_variant_get (parameters, "(&s)", &device_id);
 		g_debug ("Called %s(%s)", method_name, device_id);
@@ -1115,20 +984,12 @@
 		helper->request = g_steal_pointer (&request);
 		helper->invocation = g_object_ref (invocation);
 		helper->device_id = g_strdup (device_id);
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.device-unlock",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_unlock_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_unlock_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "Activate") == 0) {
 		const gchar *device_id = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 
 		g_variant_get (parameters, "(&s)", &device_id);
 		g_debug ("Called %s(%s)", method_name, device_id);
@@ -1144,21 +1005,13 @@
 		helper->request = g_steal_pointer (&request);
 		helper->invocation = g_object_ref (invocation);
 		helper->device_id = g_strdup (device_id);
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.device-activate",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_activate_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_activate_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "ModifyConfig") == 0) {
 		g_autofree gchar *key = NULL;
 		g_autofree gchar *value = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 
 		g_variant_get (parameters, "(ss)", &key, &value);
 		g_debug ("Called %s(%s=%s)", method_name, key, value);
@@ -1170,14 +1023,7 @@
 		helper->value = g_steal_pointer (&value);
 		helper->request = g_steal_pointer (&request);
 		helper->invocation = g_object_ref (invocation);
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.modify-config",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_modify_config_cb,
-						      g_steal_pointer (&helper));
+		fu_main_modify_config_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "ModifyRemote") == 0) {
@@ -1185,7 +1031,6 @@
 		const gchar *key = NULL;
 		const gchar *value = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 
 		/* check the id exists */
 		g_variant_get (parameters, "(&s&s&s)", &remote_id, &key, &value);
@@ -1202,20 +1047,12 @@
 
 		/* authenticate */
 		fu_main_set_status (priv, FWUPD_STATUS_WAITING_FOR_AUTH);
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.modify-remote",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_modify_remote_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_modify_remote_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "VerifyUpdate") == 0) {
 		const gchar *device_id = NULL;
 		g_autoptr(FuMainAuthHelper) helper = NULL;
-		g_autoptr(PolkitSubject) subject = NULL;
 
 		/* check the id exists */
 		g_variant_get (parameters, "(&s)", &device_id);
@@ -1234,14 +1071,7 @@
 
 		/* authenticate */
 		fu_main_set_status (priv, FWUPD_STATUS_WAITING_FOR_AUTH);
-		subject = polkit_system_bus_name_new (sender);
-		polkit_authority_check_authorization (priv->authority, subject,
-						      "org.freedesktop.fwupd.verify-update",
-						      NULL,
-						      POLKIT_CHECK_AUTHORIZATION_FLAGS_ALLOW_USER_INTERACTION,
-						      NULL,
-						      fu_main_authorize_verify_update_cb,
-						      g_steal_pointer (&helper));
+		fu_main_authorize_verify_update_cb(g_steal_pointer (&helper));
 		return;
 	}
 	if (g_strcmp0 (method_name, "Verify") == 0) {
@@ -1348,7 +1178,6 @@
 		}
 
 		/* install all the things in the store */
-		helper->subject = polkit_system_bus_name_new (sender);
 		if (!fu_main_install_with_helper (g_steal_pointer (&helper), &error)) {
 			g_dbus_method_invocation_return_gerror (invocation, error);
 			return;
@@ -1572,8 +1401,6 @@
 		g_object_unref (priv->engine);
 	if (priv->connection != NULL)
 		g_object_unref (priv->connection);
-	if (priv->authority != NULL)
-		g_object_unref (priv->authority);
 	if (priv->argv0_monitor != NULL)
 		g_object_unref (priv->argv0_monitor);
 	if (priv->introspection_daemon != NULL)
@@ -1682,13 +1509,6 @@
 		return EXIT_FAILURE;
 	}
 
-	/* get authority */
-	priv->authority = polkit_authority_get_sync (NULL, &error);
-	if (priv->authority == NULL) {
-		g_printerr ("Failed to load authority: %s\n", error->message);
-		return EXIT_FAILURE;
-	}
-
 	/* own the object */
 	priv->owner_id = g_bus_own_name (G_BUS_TYPE_SYSTEM,
 					 FWUPD_DBUS_SERVICE,
diff --git a/src/fu-util.c b/src/fu-util.c
index c07b488..5e1680a 100644
--- a/src/fu-util.c
+++ b/src/fu-util.c
@@ -2059,24 +2059,6 @@
 	return TRUE;
 }
 
-static gboolean
-fu_util_check_polkit_actions (GError **error)
-{
-	g_autofree gchar *directory = fu_common_get_path (FU_PATH_KIND_POLKIT_ACTIONS);
-	g_autofree gchar *filename = g_build_filename (directory,
-						       "org.freedesktop.fwupd.policy",
-						       NULL);
-	if (!g_file_test (filename, G_FILE_TEST_IS_REGULAR)) {
-		g_set_error_literal (error,
-				     FWUPD_ERROR,
-				     FWUPD_ERROR_AUTH_FAILED,
-				     "PolicyKit files are missing, see https://github.com/fwupd/fwupd/wiki/PolicyKit-files-are-missing");
-		return FALSE;
-	}
-
-	return TRUE;
-}
-
 static void
 fu_util_display_help (FuUtilPrivate *priv)
 {
@@ -2468,12 +2450,6 @@
 	}
 #endif
 
-	/* make sure polkit actions were installed */
-	if (!fu_util_check_polkit_actions (&error)) {
-		g_printerr ("%s\n", error->message);
-		return EXIT_FAILURE;
-	}
-
 	/* send our implemented feature set */
 	if (is_interactive) {
 		if (!fwupd_client_set_feature_flags (priv->client,
diff --git a/src/meson.build b/src/meson.build
index 030c970..e58972f 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -247,7 +247,6 @@
     gmodule,
     gudev,
     gusb,
-    polkit,
     soup,
     sqlite,
     valgrind,
