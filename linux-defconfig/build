#!/bin/sh -e

patch -p1 < no-perl.patch

# Set the kernel up for success!
scripts/setlocalversion --save-scmversion
make defconfig
make kernelrelease > version

# Useful variables
kernver="$(cat version)"
modulesdir="$1/usr/lib/modules/$kernver"
builddir="$modulesdir/build"

# Make that bad boy!
echo "Making linux-"$kernver""
make

echo "Installing modules..."
make \
    modules_install \
    INSTALL_MOD_PATH="$1/usr"

echo "Cleaning up..."
rm "$modulesdir/build" "$modulesdir/source"

echo "Copying files to build external modules..."
install -Dt "$builddir"                 -m644 .config Makefile Module.symvers System.map version vmlinux
install -Dt "$builddir/arch/x86"        -m644 arch/x86/Makefile
install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s
install -Dt "$builddir/kernel"          -m644 kernel/Makefile
install -Dt "$builddir/drivers/md"      -m644 drivers/md/*.h
install -Dt "$builddir/net/mac80211"    -m644 net/mac80211/*.h
install -Dt "$builddir/tools/objtool"         tools/objtool/objtool

cp -a scripts          "$builddir/scripts"
cp -a include          "$builddir/include"
cp -a arch/x86/include "$builddir/arch/x86/include"

find . -name "Kconfig*" -exec install -Dm644 {} "$builddir/{}" \;

chmod -Rc u=rwX,go=rX "$1"

echo "Removing cruft..."
rm -r "$builddir/Documentation"
find -L "$builddir" -type l             -exec rm -rf {} \;
find    "$builddir" -type f -name "*.o" -exec rm -rf {} \;

for arch in alpha,arc,arm,arm64,c6x,csky,h8300,hexagon,ia64,m68k,microblaze,mips,nds32,nios2,openrisc,parisc,powerpc,riscv,s390,sh,sparc,um,unicore32,xtensa; do 
    rm -rf $arch
done

echo "Laying trap..."
mkdir -p "$1/usr/src"
ln -sv "/usr/lib/modules/$kernver/build" "$1/usr/src/linux"

echo "Installing kernel..."

install -Dm644 "arch/x86/boot/bzImage" "$1/boot/vmlinuz-$kernver"
install -Dm644 "System.map"            "$1/boot/System.map-$kernver"
