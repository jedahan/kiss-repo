#!env bash

[[ -p /dev/stdin ]] && repository_paths=${KISS_PATH:-.} || repository_paths=${1:-$KISS_PATH}
error_file='.kiss-lint-error'

cleanup() {
    test -f $error_file && rm -f $_
}
trap cleanup EXIT

warn() {
  echo warning $1 "$2" >&2
}

error() {
  touch $error_file
  echo error $1 "$2" >&2
}

echo $repository_paths | while IFS=: read -r repository_path; do
  ls $repository_path/*/version | while read -r version _; do
    package_path=$(dirname $version)
    build=$package_path/build
    checksums=$package_path/checksums
    depends=$package_path/depends
    sources=$package_path/sources
    preremove=$package_path/pre-remove
    postinstall=$package_path/post-install

    test -x $version && error $_ "file is executable"

    if [[ -f $build ]]; then
      test -x $build || error $_ "file is not executable"
    else
      error "$_: file not found"
    fi

    if [[ -f $postinstall ]]; then
      test -x $postinstall || error $_ "file is not executable"
    fi

    if [[ -f $preremove ]]; then
      test -x $preremove || error $_ "file is not executable"
    fi

    if [[ -f $sources ]]; then
      if [[ -f $checksums ]]; then
        sources_lines=$(grep --invert-match --extended-regexp '^#|^$' $sources | wc -l)
        if [[ "$sources_lines" != "$(wc -l < $checksums)" ]]; then
          warn $checksums "does not match number of sources"
        fi
        grep --quiet --extended-regexp '^#|^$' $checksums && error $_ "found comments or blank lines"
        test -x $checksums && error $_ "file is executable"
      fi
    fi
  done
done

test ! -f $error_file
